/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $
 *
 * $Id:$
 */
#ifndef DOT11BSSTABLE_H
#define DOT11BSSTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>
#if 0
/* other required module components */
    /* *INDENT-OFF*  */
config_add_mib(BRCM-80211-MGMT-MIB)
config_require(BRCM-80211-MGMT-MIB/dot11BssTable/dot11BssTable_interface)
config_require(BRCM-80211-MGMT-MIB/dot11BssTable/dot11BssTable_data_access)
config_require(BRCM-80211-MGMT-MIB/dot11BssTable/dot11BssTable_data_get)
config_require(BRCM-80211-MGMT-MIB/dot11BssTable/dot11BssTable_data_set)
    /* *INDENT-ON*  */
#endif
/* OID and column number definitions for dot11BssTable */
#include "dot11BssTable_oids.h"

/* enum definions */
#include "dot11BssTable_enums.h"
#if 0
/* *********************************************************************
 * function declarations
 */
void init_dot11BssTable(void);
void shutdown_dot11BssTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table dot11BssTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * BRCM-80211-MGMT-MIB::dot11BssTable is subid 14 of dot11MbssBase.
 * Its status is Deprecated.
 * OID: .1.3.6.1.4.1.4413.2.2.2.1.5.4.1.14, length: 15
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review dot11BssTable registration context.
     */
typedef netsnmp_data_list dot11BssTable_registration;
#endif
/**********************************************************************/
/*
 * TODO:110:r: |-> Review dot11BssTable data context structure.
 * This structure is used to represent the data for dot11BssTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * dot11BssTable.
 */
typedef struct dot11BssTable_data_s {
    
        /*
         * dot11BssId(1)/PhysAddress/ASN_OCTET_STR/char(char)//L/A/W/e/r/d/H
         */
   char   dot11BssId[32];
size_t      dot11BssId_len; /* # of char elements, not bytes */
    
        /*
         * dot11BssEnable(2)/TruthValue/ASN_INTEGER/long(u_long)//l/A/W/E/r/d/h
         */
   u_long   dot11BssEnable;
    
        /*
         * dot11BssSsid(3)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/W/e/R/d/h
         */
   char   dot11BssSsid[32];
size_t      dot11BssSsid_len; /* # of char elements, not bytes */
    
        /*
         * dot11BssNetworkBridge(4)/INTEGER/ASN_INTEGER/long(u_long)//l/A/W/E/r/d/h
         */
   u_long   dot11BssNetworkBridge;
    
        /*
         * dot11BssSecurityMode(5)/INTEGER/ASN_INTEGER/long(u_long)//l/A/W/E/r/d/h
         */
   u_long   dot11BssSecurityMode;
    
        /*
         * dot11BssClosedNetwork(6)/TruthValue/ASN_INTEGER/long(u_long)//l/A/W/E/r/d/h
         */
   u_long   dot11BssClosedNetwork;
    
        /*
         * dot11BssAccessMode(7)/INTEGER/ASN_INTEGER/long(u_long)//l/A/W/E/r/d/h
         */
   u_long   dot11BssAccessMode;
    
} dot11BssTable_data;


/* *********************************************************************
 * TODO:115:o: |-> Review dot11BssTable undo context.
 * We're just going to use the same data structure for our
 * undo_context. If you want to do something more efficent,
 * define your typedef here.
 */
typedef dot11BssTable_data dot11BssTable_undo_data;

/*
 * TODO:120:r: |-> Review dot11BssTable mib index.
 * This structure is used to represent the index for dot11BssTable.
 */
typedef struct dot11BssTable_mib_index_s {

        /*
         * ifIndex(1)/InterfaceIndex/ASN_INTEGER/long(long)//l/A/w/e/R/d/H
         */
   long   ifIndex;


} dot11BssTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review dot11BssTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
*/
#define MAX_dot11BssTable_IDX_LEN     1


/* *********************************************************************
 * TODO:130:o: |-> Review dot11BssTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * dot11BssTable_rowreq_ctx pointer.
 */
typedef struct dot11BssTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_dot11BssTable_IDX_LEN];
    
    dot11BssTable_mib_index        tbl_idx;
    
    dot11BssTable_data              data;
    dot11BssTable_undo_data       * undo;
    unsigned int                column_set_flags; /* flags for set columns */


    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * TODO:131:o: |   |-> Add useful data to dot11BssTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *dot11BssTable_data_list;

} dot11BssTable_rowreq_ctx;
#if 0
typedef struct dot11BssTable_ref_rowreq_ctx_s {
    dot11BssTable_rowreq_ctx *rowreq_ctx;
} dot11BssTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int dot11BssTable_pre_request(dot11BssTable_registration * user_context);
    int dot11BssTable_post_request(dot11BssTable_registration * user_context,
        int rc);

    int dot11BssTable_commit(dot11BssTable_rowreq_ctx * rowreq_ctx);

    dot11BssTable_rowreq_ctx *
                  dot11BssTable_row_find_by_mib_index(dot11BssTable_mib_index *mib_idx);

extern const oid dot11BssTable_oid[];
extern const int dot11BssTable_oid_size;


#include "dot11BssTable_interface.h"
#include "dot11BssTable_data_access.h"
#include "dot11BssTable_data_get.h"
#endif
#include "dot11BssTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* DOT11BSSTABLE_H */
/** @} */
