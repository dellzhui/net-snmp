/*
 * Note: this file originally auto-generated by mib2c using
 *  $
 *
 * $Id:$
 */
#ifndef WIFIBSSTABLE_ENUMS_H
#define WIFIBSSTABLE_ENUMS_H

#ifdef __cplusplus
extern "C" {
#endif

 /*
 * NOTES on enums
 * ==============
 *
 * Value Mapping
 * -------------
 * If the values for your data type don't exactly match the
 * possible values defined by the mib, you should map them
 * below. For example, a boolean flag (1/0) is usually represented
 * as a TruthValue in a MIB, which maps to the values (1/2).
 *
 */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table wifiBssTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * wifiBssEnable (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wifiBssSecurityMode (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WIFIBSSSECURITYMODE_ENUMS
#define WIFIBSSSECURITYMODE_ENUMS

#define WIFIBSSSECURITYMODE_DISABLED  0 
#define WIFIBSSSECURITYMODE_WEP  1 
#define WIFIBSSSECURITYMODE_WPAPSK  2 
#define WIFIBSSSECURITYMODE_WPA2PSK  3 
#define WIFIBSSSECURITYMODE_WPAENTERPRISE  4 
#define WIFIBSSSECURITYMODE_WPA2ENTERPRISE  5 
#define WIFIBSSSECURITYMODE_RADIUSWEP  6 
#define WIFIBSSSECURITYMODE_WPAWPA2PSK  7 
#define WIFIBSSSECURITYMODE_WPAWPA2ENTERPRISE  8 

#endif /* WIFIBSSSECURITYMODE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wifiBssClosedNetwork (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wifiBssAccessMode (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WIFIBSSACCESSMODE_ENUMS
#define WIFIBSSACCESSMODE_ENUMS

#define WIFIBSSACCESSMODE_ALLOWANY  1 
#define WIFIBSSACCESSMODE_ALLOWLIST  2 
#define WIFIBSSACCESSMODE_DENYLIST  3 

#endif /* WIFIBSSACCESSMODE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wifiBssOpmodeCapRequired (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WIFIBSSOPMODECAPREQUIRED_ENUMS
#define WIFIBSSOPMODECAPREQUIRED_ENUMS

#define WIFIBSSOPMODECAPREQUIRED_NONE  0 
#define WIFIBSSOPMODECAPREQUIRED_ERP  1 
#define WIFIBSSOPMODECAPREQUIRED_HT  2 
#define WIFIBSSOPMODECAPREQUIRED_VHT  3 

#endif /* WIFIBSSOPMODECAPREQUIRED_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wifiBssProtectedMgmtFrames (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WIFIBSSPROTECTEDMGMTFRAMES_ENUMS
#define WIFIBSSPROTECTEDMGMTFRAMES_ENUMS

#define WIFIBSSPROTECTEDMGMTFRAMES_OFF  0 
#define WIFIBSSPROTECTEDMGMTFRAMES_CAPABLE  1 
#define WIFIBSSPROTECTEDMGMTFRAMES_REQUIRED  2 

#endif /* WIFIBSSPROTECTEDMGMTFRAMES_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wifiBssPublicAccessMode (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WIFIBSSPUBLICACCESSMODE_ENUMS
#define WIFIBSSPUBLICACCESSMODE_ENUMS

#define WIFIBSSPUBLICACCESSMODE_PRIVATE  1 
#define WIFIBSSPUBLICACCESSMODE_PUBLIC  2 
#define WIFIBSSPUBLICACCESSMODE_OTHER  3 

#endif /* WIFIBSSPUBLICACCESSMODE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wifiBssMfbProbeResponse (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wifiBssAccessTableClear (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wifiBssIASSchedulerEnable (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wifiBssIASSchedulerType (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WIFIBSSIASSCHEDULERTYPE_ENUMS
#define WIFIBSSIASSCHEDULERTYPE_ENUMS

#define WIFIBSSIASSCHEDULERTYPE_DATA  1 
#define WIFIBSSIASSCHEDULERTYPE_PUBLIC  2 
#define WIFIBSSIASSCHEDULERTYPE_VIDEO  3 

#endif /* WIFIBSSIASSCHEDULERTYPE_ENUMS */




#ifdef __cplusplus
}
#endif

#endif /* WIFIBSSTABLE_ENUMS_H */
